/*
Пример использования
Ресурса load balancer backend server
Ресурс позволяет:
1. Создавать server
2. Редактировать server
3. Удалять server

*/
#Расскомментируйте этот код,
#и внесите необходимые правки в версию и путь,
#чтобы работать с установленным вручную (не через hashicorp provider registry) провайдером
/*
terraform {
  required_providers {
    decort = {
      version = "1.1"
      source  = "digitalenergy.online/decort/decort"
    }
  }
}
*/

provider "decort" {
  authenticator = "oauth2"
  #controller_url = <DECORT_CONTROLLER_URL>
  controller_url = "https://ds1.digitalenergy.online"
  #oauth2_url = <DECORT_SSO_URL>
  oauth2_url           = "https://sso.digitalenergy.online"
  allow_unverified_ssl = true
}

resource "decort_lb_backend_server" "lb" {
  #id балансировщика нагрузок
  #обязательный параметр
  #тип - число
  lb_id = 668

  #имя бекенда для создания сервера
  #обязательный параметр
  #тип - строка
  backend_name = "testBackend"

  #имя сервера
  #обязательный параметр
  #тип - строка
  name = "testServer"

  #ip адрес сервера
  #обязательный параметр
  #тип - строка
  address = "192.168.5.33"

  #порт сервера
  #обязательный параметр
  #тип - число
  port = 6553

  #проверка доступности сервера
  #опицональный параметр
  #тип - строка
  #по умолчанию - "enabled"
  #доступные значения - "disabled", "enabled"
  #check = "enabled"

  #интервал между проверками, в миллисекундах
  #опицональный параметр
  #тип - число
  #по умолчанию - 5000
  #inter = 5000

  #интервал между проверками доступности сервера после восстановления, в миллисекундах
  #опицональный параметр
  #тип - число
  #по умолчанию - 1000
  #downinter = 1000

  #кол-во проверок, которые сервер должен успешно пройти
  #опицональный параметр
  #тип - число
  #по умолчанию - 2
  #rise = 2

  #кол-во проверок, которые сервер может не пройти и после этого получить статус "unavailable"
  #опицональный параметр
  #тип - число
  #по умолчанию - 2
  #fall = 2

  #кол-во миллисекунд - время между получением сервера статуса "available" и открытием соединений
  #опицональный параметр
  #тип - число
  #по умолчанию - 60000
  #slowstart = 60000

  #максимальное кол-во соединений сервера, при достижении этого кол-ва, сервер выходит из схемы балансирования
  #опицональный параметр
  #тип - число
  #по умолчанию - 250
  #maxconn = 250

  #максимальное кол-во соединений в очереди серевера, при достижении этого кол-ва, соединения будут перенаправлены на другой сервер
  #опицональный параметр
  #тип - число
  #по умолчанию - 256
  #maxqueue = 256

  #вес сервера для балансировки
  #опицональный параметр
  #тип - число
  #мин - 0
  #макс - 255
  #по умолчанию - 100
  #weight = 100

  timeouts {
    create = "5m"
    read   = "5m"
    update = "5m"
    delete = "5m"
  }
}

output "test" {
  value = decort_lb_backend_server.lb
}
